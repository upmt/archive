# Deploy the Î¼PMT Archive to Github Pages
name: Deploy Archive

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  # Can be triggered by repository_dispatch from main upmt repo
  repository_dispatch:
    types: [archive-version]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Pages
        uses: actions/configure-pages@v5
        
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          
      # If this was triggered by repository_dispatch, archive the new version
      - name: Archive New Version
        if: github.event_name == 'repository_dispatch'
        env:
          COMMIT_SHA: ${{ github.event.client_payload.commit_sha }}
          VERSION: ${{ github.event.client_payload.version }}
          BUILD_DATE: ${{ github.event.client_payload.build_date }}
          DESCRIPTION: ${{ github.event.client_payload.description }}
        run: |
          # Download the built version from the main repository
          node scripts/archive-version.js
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: '.'
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4